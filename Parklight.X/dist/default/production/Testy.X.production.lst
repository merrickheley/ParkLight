

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Jan 17 22:23:27 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1828
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  0008                     	;# 
    20  0009                     	;# 
    21  000A                     	;# 
    22  000B                     	;# 
    23  000C                     	;# 
    24  000D                     	;# 
    25  000E                     	;# 
    26  0011                     	;# 
    27  0012                     	;# 
    28  0013                     	;# 
    29  0015                     	;# 
    30  0016                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001B                     	;# 
    37  001C                     	;# 
    38  001E                     	;# 
    39  001F                     	;# 
    40  008C                     	;# 
    41  008D                     	;# 
    42  008E                     	;# 
    43  0091                     	;# 
    44  0092                     	;# 
    45  0093                     	;# 
    46  0095                     	;# 
    47  0096                     	;# 
    48  0097                     	;# 
    49  0098                     	;# 
    50  0099                     	;# 
    51  009A                     	;# 
    52  009B                     	;# 
    53  009B                     	;# 
    54  009C                     	;# 
    55  009D                     	;# 
    56  009E                     	;# 
    57  010C                     	;# 
    58  010D                     	;# 
    59  010E                     	;# 
    60  0111                     	;# 
    61  0112                     	;# 
    62  0113                     	;# 
    63  0114                     	;# 
    64  0115                     	;# 
    65  0116                     	;# 
    66  0117                     	;# 
    67  0118                     	;# 
    68  0119                     	;# 
    69  011A                     	;# 
    70  011B                     	;# 
    71  011D                     	;# 
    72  011E                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  018E                     	;# 
    76  0191                     	;# 
    77  0191                     	;# 
    78  0192                     	;# 
    79  0193                     	;# 
    80  0193                     	;# 
    81  0193                     	;# 
    82  0194                     	;# 
    83  0195                     	;# 
    84  0196                     	;# 
    85  0199                     	;# 
    86  019A                     	;# 
    87  019B                     	;# 
    88  019B                     	;# 
    89  019B                     	;# 
    90  019B                     	;# 
    91  019C                     	;# 
    92  019C                     	;# 
    93  019D                     	;# 
    94  019E                     	;# 
    95  019F                     	;# 
    96  020C                     	;# 
    97  020D                     	;# 
    98  020E                     	;# 
    99  0211                     	;# 
   100  0211                     	;# 
   101  0212                     	;# 
   102  0212                     	;# 
   103  0213                     	;# 
   104  0213                     	;# 
   105  0214                     	;# 
   106  0214                     	;# 
   107  0215                     	;# 
   108  0215                     	;# 
   109  0215                     	;# 
   110  0215                     	;# 
   111  0216                     	;# 
   112  0216                     	;# 
   113  0217                     	;# 
   114  0217                     	;# 
   115  0291                     	;# 
   116  0291                     	;# 
   117  0292                     	;# 
   118  0293                     	;# 
   119  0294                     	;# 
   120  0295                     	;# 
   121  0295                     	;# 
   122  0296                     	;# 
   123  0298                     	;# 
   124  0298                     	;# 
   125  0299                     	;# 
   126  029A                     	;# 
   127  029B                     	;# 
   128  029C                     	;# 
   129  029D                     	;# 
   130  029E                     	;# 
   131  029E                     	;# 
   132  0311                     	;# 
   133  0311                     	;# 
   134  0312                     	;# 
   135  0313                     	;# 
   136  0318                     	;# 
   137  0318                     	;# 
   138  0319                     	;# 
   139  031A                     	;# 
   140  038C                     	;# 
   141  038D                     	;# 
   142  038E                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0394                     	;# 
   147  0395                     	;# 
   148  0396                     	;# 
   149  039A                     	;# 
   150  039C                     	;# 
   151  039D                     	;# 
   152  039E                     	;# 
   153  039F                     	;# 
   154  0415                     	;# 
   155  0416                     	;# 
   156  0417                     	;# 
   157  041C                     	;# 
   158  041D                     	;# 
   159  041E                     	;# 
   160  0FE4                     	;# 
   161  0FE5                     	;# 
   162  0FE6                     	;# 
   163  0FE7                     	;# 
   164  0FE8                     	;# 
   165  0FE9                     	;# 
   166  0FEA                     	;# 
   167  0FEB                     	;# 
   168  0FED                     	;# 
   169  0FEE                     	;# 
   170  0FEF                     	;# 
   171  000B                     _INTCONbits	set	11
   172  000E                     _PORTC	set	14
   173  0018                     _T1CON	set	24
   174  006D                     _RB5	set	109
   175  0072                     _RC2	set	114
   176  0076                     _RC6	set	118
   177  0095                     _OPTION_REG	set	149
   178  008D                     _TRISB	set	141
   179  008E                     _TRISC	set	142
   180                           
   181                           ; #config settings
   182  0000                     
   183                           	psect	cinit
   184  0013                     start_initialization:	
   185  0013                     __initialization:	
   186  0013                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  0013                     __end_of__initialization:	
   190  0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   191  0014  0020               	movlb	0
   192  0015  3180  2835         	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	cstackCOMMON
   195  0070                     __pcstackCOMMON:	
   196  0070                     ?_HCSRTrigger:	
   197  0070                     ?_init:	
   198                           ; 0 bytes @ 0x0
   199                           
   200  0070                     ?_main:	
   201                           ; 0 bytes @ 0x0
   202                           
   203  0070                     ?_ISR:	
   204                           ; 0 bytes @ 0x0
   205                           
   206  0070                     ??_ISR:	
   207                           ; 0 bytes @ 0x0
   208                           
   209                           
   210                           ; 0 bytes @ 0x0
   211  0070                     	ds	1
   212  0071                     ??_HCSRTrigger:	
   213  0071                     ??_init:	
   214                           ; 0 bytes @ 0x1
   215                           
   216                           
   217                           ; 0 bytes @ 0x1
   218  0071                     	ds	1
   219  0072                     HCSRTrigger@counter:	
   220                           
   221                           ; 2 bytes @ 0x2
   222  0072                     	ds	2
   223  0074                     ??_main:	
   224                           
   225                           ; 0 bytes @ 0x4
   226  0074                     	ds	2
   227                           
   228                           	psect	maintext
   229  0035                     __pmaintext:	
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 55 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;		None               void
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B1F/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   249 ;;      Params:         0       0       0       0
   250 ;;      Locals:         0       0       0       0
   251 ;;      Temps:          2       0       0       0
   252 ;;      Totals:         2       0       0       0
   253 ;;Total ram usage:        2 bytes
   254 ;; Hardware stack levels required when called:    2
   255 ;; This function calls:
   256 ;;		_HCSRTrigger
   257 ;;		_init
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           
   264                           ;psect for function _main
   265  0035                     _main:	
   266                           
   267                           ;main.c: 57: init();
   268                           
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   271  0035  3180  2045  3180   	fcall	_init
   272  0038                     l28:	
   273                           ;main.c: 59: while(1) {
   274                           
   275                           
   276                           ;main.c: 60: HCSRTrigger();
   277  0038  3180  2017  3180   	fcall	_HCSRTrigger
   278                           
   279                           ;main.c: 61: _delay((unsigned long)((100)*(500000/4000.0)));
   280  003B  3011               	movlw	17
   281  003C  00F5               	movwf	??_main+1
   282  003D  303A               	movlw	58
   283  003E  00F4               	movwf	??_main
   284  003F                     u57:	
   285  003F  0BF4               	decfsz	??_main,f
   286  0040  283F               	goto	u57
   287  0041  0BF5               	decfsz	??_main+1,f
   288  0042  283F               	goto	u57
   289  0043  0000               	nop
   290  0044  2838               	goto	l28
   291  0045                     __end_of_main:	
   292                           
   293                           	psect	text1
   294  0045                     __ptext1:	
   295 ;; *************** function _init *****************
   296 ;; Defined at:
   297 ;;		line 23 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;		None               void
   304 ;; Registers used:
   305 ;;		wreg, status,2
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   311 ;;      Params:         0       0       0       0
   312 ;;      Locals:         0       0       0       0
   313 ;;      Temps:          0       0       0       0
   314 ;;      Totals:         0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _init
   327  0045                     _init:	
   328                           
   329                           ;main.c: 25: INTCONbits.GIE = 1;
   330                           
   331                           ;incstack = 0
   332                           ; Regs used in _init: [wreg+status,2]
   333  0045  178B               	bsf	11,7	;volatile
   334                           
   335                           ;main.c: 26: INTCONbits.PEIE = 1;
   336  0046  170B               	bsf	11,6	;volatile
   337                           
   338                           ;main.c: 27: INTCONbits.T0IE = 1;
   339  0047  168B               	bsf	11,5	;volatile
   340                           
   341                           ;main.c: 30: INTCONbits.TMR0IE = 1;
   342  0048  168B               	bsf	11,5	;volatile
   343                           
   344                           ;main.c: 37: OPTION_REG = 0b00000000;
   345  0049  0021               	movlb	1	; select bank1
   346  004A  0195               	clrf	21	;volatile
   347                           
   348                           ;main.c: 47: T1CON = 0b01000001;
   349  004B  3041               	movlw	65
   350  004C  0020               	movlb	0	; select bank0
   351  004D  0098               	movwf	24	;volatile
   352                           
   353                           ;main.c: 48: TRISC = 0b00000000;
   354  004E  0021               	movlb	1	; select bank1
   355  004F  018E               	clrf	14	;volatile
   356                           
   357                           ;main.c: 49: TRISB = 0b11110000;
   358  0050  30F0               	movlw	240
   359  0051  008D               	movwf	13	;volatile
   360                           
   361                           ;main.c: 52: PORTC = 0x00;
   362  0052  0020               	movlb	0	; select bank0
   363  0053  018E               	clrf	14	;volatile
   364  0054  0008               	return
   365  0055                     __end_of_init:	
   366                           
   367                           	psect	text2
   368  0017                     __ptext2:	
   369 ;; *************** function _HCSRTrigger *****************
   370 ;; Defined at:
   371 ;;		line 100 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  counter         2    2[COMMON] int 
   376 ;; Return value:  Size  Location     Type
   377 ;;		None               void
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   385 ;;      Params:         0       0       0       0
   386 ;;      Locals:         2       0       0       0
   387 ;;      Temps:          1       0       0       0
   388 ;;      Totals:         3       0       0       0
   389 ;;Total ram usage:        3 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; Hardware stack levels required when called:    1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           
   400                           ;psect for function _HCSRTrigger
   401  0017                     _HCSRTrigger:	
   402                           
   403                           ;main.c: 101: int counter = 0;
   404                           
   405                           ;incstack = 0
   406                           ; Regs used in _HCSRTrigger: [wreg+status,2+status,0]
   407  0017  01F2               	clrf	HCSRTrigger@counter
   408  0018  01F3               	clrf	HCSRTrigger@counter+1
   409                           
   410                           ;main.c: 103: RC2 = 1;
   411  0019  0020               	movlb	0	; select bank0
   412  001A  150E               	bsf	14,2	;volatile
   413                           
   414                           ;main.c: 104: _delay((unsigned long)((15)*(500000/4000000.0)));
   415  001B  0000               	nop
   416                           
   417                           ;main.c: 105: RC2 = 0;
   418  001C  0020               	movlb	0	; select bank0
   419  001D  110E               	bcf	14,2	;volatile
   420  001E  2825               	goto	l522
   421  001F                     l524:	
   422                           
   423                           ;main.c: 109: counter = counter + 1;
   424  001F  0872               	movf	HCSRTrigger@counter,w
   425  0020  3E01               	addlw	1
   426  0021  00F2               	movwf	HCSRTrigger@counter
   427  0022  3000               	movlw	0
   428  0023  3D73               	addwfc	HCSRTrigger@counter+1,w
   429  0024  00F3               	movwf	HCSRTrigger@counter+1
   430  0025                     l522:	
   431                           ;main.c: 107: while (1) {
   432                           
   433                           ;main.c: 111: break;
   434                           
   435                           ;main.c: 110: } else {
   436                           
   437                           
   438                           ;main.c: 108: if (RB5 > 0) {
   439  0025  1A8D               	btfsc	13,5	;volatile
   440  0026  281F               	goto	l524
   441                           
   442                           ;main.c: 112: }
   443                           ;main.c: 113: }
   444                           ;main.c: 117: if (counter > 0) {
   445  0027  0873               	movf	HCSRTrigger@counter+1,w
   446  0028  3A80               	xorlw	128
   447  0029  00F1               	movwf	??_HCSRTrigger
   448  002A  3080               	movlw	128
   449  002B  0271               	subwf	??_HCSRTrigger,w
   450  002C  1D03               	skipz
   451  002D  2830               	goto	u25
   452  002E  3001               	movlw	1
   453  002F  0272               	subwf	HCSRTrigger@counter,w
   454  0030                     u25:	
   455  0030  1C03               	skipc
   456  0031  0008               	return
   457                           
   458                           ;main.c: 118: RC6 = 1;
   459  0032  0020               	movlb	0	; select bank0
   460  0033  170E               	bsf	14,6	;volatile
   461  0034  0008               	return
   462  0035                     __end_of_HCSRTrigger:	
   463                           
   464                           	psect	intentry
   465  0004                     __pintentry:	
   466 ;; *************** function _ISR *****************
   467 ;; Defined at:
   468 ;;		line 65 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;		None               void
   475 ;; Registers used:
   476 ;;		None
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   482 ;;      Params:         0       0       0       0
   483 ;;      Locals:         0       0       0       0
   484 ;;      Temps:          1       0       0       0
   485 ;;      Totals:         1       0       0       0
   486 ;;Total ram usage:        1 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		Interrupt level 1
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495  0004                     _ISR:	
   496                           
   497                           ;incstack = 0
   498                           ; Regs used in _ISR: []
   499  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   500  0005  3180               	pagesel	$
   501  0006  0020               	movlb	0	; select bank0
   502  0007  087F               	movf	127,w
   503  0008  00F0               	movwf	??_ISR
   504                           
   505                           ;main.c: 70: if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
   506  0009  190B               	btfsc	11,2	;volatile
   507  000A  1E8B               	btfss	11,5	;volatile
   508  000B  280D               	goto	i1l35
   509                           
   510                           ;main.c: 72: INTCONbits.TMR0IF = 0;
   511  000C  110B               	bcf	11,2	;volatile
   512  000D                     i1l35:	
   513  000D  0870               	movf	??_ISR,w
   514  000E  00FF               	movwf	127
   515  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   516  0010  0009               	retfie
   517  0011                     __end_of_ISR:	
   518  007E                     btemp	set	126	;btemp
   519  007E                     int$flags	set	126
   520  007E                     wtemp	set	126
   521  007E                     wtemp0	set	126
   522  0080                     wtemp1	set	128
   523  0082                     wtemp2	set	130
   524  0084                     wtemp3	set	132
   525  0086                     wtemp4	set	134
   526  0088                     wtemp5	set	136
   527  007F                     wtemp6	set	127
   528  007E                     ttemp	set	126
   529  007E                     ttemp0	set	126
   530  0081                     ttemp1	set	129
   531  0084                     ttemp2	set	132
   532  0087                     ttemp3	set	135
   533  007F                     ttemp4	set	127
   534  007E                     ltemp	set	126
   535  007E                     ltemp0	set	126
   536  0082                     ltemp1	set	130
   537  0086                     ltemp2	set	134
   538  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_HCSRTrigger

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              4 COMMON     2     2      0
                        _HCSRTrigger
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HCSRTrigger                                          3     3      0      30
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HCSRTrigger
   _init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       6       2       42.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Jan 17 22:23:27 2016

            __CFG_CP$OFF 0000                       l28 0038                       u25 0030  
                     u57 003F                      l522 0025                      l524 001F  
                    _RC2 0072                      _RB5 006D                      _RC6 0076  
           __CFG_CPD$OFF 0000                      _ISR 0004             __CFG_BORV$LO 0000  
           __CFG_IESO$ON 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   i1l35 000D             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 0035                     _init 0045                     btemp 007E  
                   ltemp 007E                     start 0011                     ttemp 007E  
                   wtemp 007E                    ??_ISR 0070            __CFG_PLLEN$ON 0000  
                  ?_main 0070                    ?_init 0070            __CFG_WDTE$OFF 0000  
                  _T1CON 0018                    _PORTC 000E                    _TRISB 008D  
                  _TRISC 008E           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 0013             __end_of_main 0045  
           __end_of_init 0055                   ??_main 0074                   ??_init 0071  
         __CFG_PWRTE$OFF 0000     __size_of_HCSRTrigger 001E  __end_of__initialization 0013  
         __pcstackCOMMON 0070               __pmaintext 0035               __pintentry 0004  
        __CFG_STVREN$OFF 0000                  __ptext1 0045                  __ptext2 0017  
           __size_of_ISR 000D     end_of_initialization 0013         __CFG_FOSC$INTOSC 0000  
          ??_HCSRTrigger 0071      start_initialization 0013              __end_of_ISR 0011  
    __end_of_HCSRTrigger 0035                ___latbits 0001              _HCSRTrigger 0017  
     HCSRTrigger@counter 0072            __size_of_main 0010            __size_of_init 0010  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095             ?_HCSRTrigger 0070  
